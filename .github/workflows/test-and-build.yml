name: Build and Test
on:
  workflow_call:
    inputs:
      ref:
        description: The reference to build
        type: string
        required: true
    outputs:
      image-id:
        description: The ID of image that has been built
        value: ${{ jobs.build.outputs.image-id }}

env:
  AIRFLOW_HOME: /home/runner/work/workflows/workflows
  REGISTRY: registry.cern.ch
  IMAGE: cern-sis/scoap3/workflows

jobs:
  build_test:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      IOP_FTP_SSH_PRIVATE_KEY: ${{ secrets.IOP_FTP_SSH_PRIVATE_KEY }}
    steps:
      - name: Checkout
        if: ${{ github.event_name == 'push' }}
        uses: actions/checkout@v3

      - name: Checkout PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install Python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.11

      - name: Install python dependencies
        run: |
          pip install --upgrade pip
          pip install --no-cache-dir --upgrade setuptools
          pip install --no-cache-dir --upgrade wheel
          pip install -r requirements-airflow.txt
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Run services for IT Tests, create buckets
        run: make start

      - name: List services for IT Tests
        run: docker ps

      - name: List all dags
        run: airflow dags list

      - name: Build Image
        id: build
        uses: cern-sis/gh-workflows/.github/actions/docker-build@v6.3.1
        with:
          registry: ${{ env.REGISTRY }}
          image: ${{ env.IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
          cache: false
          push: true
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_SECRET }}

      - name: Run tests with pytest and generate report
        run: >
          docker run
          --name workflows
          --network=host
          -e S3_ENDPOINT=http://localhost:9000
          -e IOP_FTP_SSH_PRIVATE_KEY="${IOP_FTP_SSH_PRIVATE_KEY}"
          -v "$(pwd)"/tests:/opt/airflow/tests
          -v "$(pwd)"/data:/opt/airflow/data
          --entrypoint pytest
          $REGISTRY/$IMAGE@${{ steps.build.outputs.image-digest }}
          tests
          --cov=./
          --cov-report=xml

      - name: Copy test coverage file to host machine
        run: docker cp workflows:/opt/airflow/coverage.xml .

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          verbose: true
